on:
  workflow_dispatch:
    inputs:
      status:
        type: string
        required: true
jobs:
  playground:
    name: Playground
    runs-on: ubuntu-latest
    outputs:
      pr-number: ${{ env.PR_NUMBER }}
    steps:
    - name: Step1
      uses: addnab/docker-run-action@v3
      with:
        image: bunnyshell/cli:latest
        run: |
          # deletableStatuses=${{ fromJSON('["draft", "deployment_failed", "running", "stopped", "stopping_failed", "starting_failed", "deleting_failed", "aborted"]') }}
          # echo "deletableStatuses OK" 
          
          # ENV_OPERATION_STATUS=${{ inputs.status }}
          # echo "ENV_OPERATION_STATUS $ENV_OPERATION_STATUS"
          
          # #if [[ ! " ${deletableStatuses[@]} " =~ " ${ENV_OPERATION_STATUS} " ]]; then
          # if [[ ! ${{ contains(deletableStatuses, ENV_OPERATION_STATUS) }} ]]; then
            
          #   echo "Status is not in array. The current operation status is '$ENV_OPERATION_STATUS'."          
            
          #   exit 1
          # fi
          
          # echo "Status is in array"

          # Define your array of statuses
          validStatuses=("status1" "status2" "status3")

          # Get the current status from your environment (replace this with your actual method of obtaining the status)
          currentStatus="status4"  # replace with the actual way you get the status

          # Check if the current status is in the array using the 'contains' operator
          if [[ " ${validStatuses[@]} " == *"${currentStatus}"* ]]; then
            echo "Status is valid."
          else
            echo "Invalid status."
            exit 1  # you might want to exit the workflow with an error code
          fi

